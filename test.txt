landing page,

show all listing,

CRUD application for users and listing also comments,

login (authentication and autorisation),

basic securiety using passport.js

image upload in cloudanary.
 
========================
username: patelnisarg3322
password for mongo: v0hNFY8vOwU7ghWl

next step

error handeling. (DONE)
flash functions (DONE)
login page and local variables (DONE)
login middleware (DONE)
joi schema to validate posts (DONE)
make a "own post section to see all the post that a particular user posted and manage it like edit and delete" (DONE)
upoload images and store with the image (DONE)
delete all the data with the post and user delete.(DONE)
improve the UI and make it little more clean. update login and register page and show page.(DONE)


remaining:

deploy and test.


future plans for additional feature.

message and filter options.
different sections for different types of pets.


chat gpt promp for resume for this project:
how to discribe a project that i make in my resume i am applying for my first software engineering internship , so the discription of the projevt is here: it is a marketplace full stack web app where people can login and register for a account and also post new posting of there pet or see all the post of other users and i have used node.js express.js mongodb, ejs, login and register , authentication and autorisation, image uploade and same different models and schema of mongo db like users and post and also store refID of user who made the post in post model like databse relation ship also it is hosted and deployed on a server. also used middeware and so many differernt pakages like  dotenv, mongoose method-override,passport.js,session, connect-flash , errorhandeling and custom error handeling made diffrent router for different routes also i have followed RESTfull API concept and also implimented CRUD application for both post and user .


answer from chat gpt 
1) Developed a full-stack marketplace web app enabling user registration, login, and pet-related postings.
Implemented user authentication, authorization, and relational database modeling using Node.js, Express.js, and MongoDB.
Utilized EJS for dynamic rendering and efficient image uploading within the MongoDB database.
Designed schemas for users and posts, ensuring data integrity and reference ID relationships.
Enhanced user experience with packages like dotenv, method-override, passport.js, and session management.
Applied middleware and error-handling techniques, including custom error handling, for a smooth interface.
Followed RESTful API principles, achieving CRUD functionality for both user and post entities.
Successfully deployed the application on a server, demonstrating deployment proficiency.

2)Engineered a dynamic, full-stack marketplace web application, redefining pet interactions through seamless registration, engaging user postings, and interactive content.
Orchestrated robust user authentication, fueling trust and secure access, while also crafting an intricate relational model in Node.js, Express.js, and MongoDB.
Breathing life into the interface, harnessed EJS for captivating content presentation and empowered users to effortlessly upload pet visuals, leveraging MongoDB's prowess.
Engineered ingenious database architecture, designing agile user and post schemas, weaving a cohesive data tapestry and meticulously managing reference ID relationships.
Elevating user satisfaction, integrated dotenv, method-override, passport.js, and intelligent session management for an unparalleled experience.
Fine-tuned user journeys with intuitive middleware and a symphony of error-handling techniques, including a bespoke touch for seamless navigation.
Adhered to RESTful API principles, birthing a harmonious CRUD symphony for both user and post realms, refining data interactions.
Showcased mastery by flawlessly deploying the masterpiece onto a server, revealing not only code prowess but a complete project lifecycle grasp.

3) AtS friendly version 

Created a dynamic pet marketplace website facilitating pet adoption, sales, and user postings for an enriched pet interaction experience.
Implemented robust user authentication using Passport.js to ensure secure access and build user trust.
Designed complex relational models and managed model relationships in Node.js, Express.js, and MongoDB for optimized data storage and retrieval.
Utilized EJS for dynamic content presentation, allowing seamless pet media uploads and immersive user experiences.
Created agile user/post schemas, optimizing data structures for efficient handling of user-generated content.
Integrated method-override for RESTful routes, enhancing data interactions and user navigation.
Orchestrated middleware techniques and meticulous error handling for intuitive user journeys.
Demonstrated adherence to RESTful API principles through a comprehensive CRUD architecture that enhances data interactions.
Successfully deployed the project, showcasing coding expertise and a holistic grasp of the project lifecycle.


Dynamic second-year Computer Engineering student at University of Ottawa (9.1/10.0 CGPA), adept in Java, Python, HTML, CSS, and JavaScript. Expertise spans full-stack Web development using Node.js, Express, and MongoDB. Seeking impactful internships to collaborate with industry leaders and elevate the world of Computer Engineering.